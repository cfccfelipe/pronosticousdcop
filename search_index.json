[["index.html", "Pronóstico USD/COP Capitulo 1 Fuente de información", " Pronóstico USD/COP Carlos Felipe Cortés Cataño - Roy Díaz Vega 2023-05-11 Capitulo 1 Fuente de información Los precios de cierre diarios del presente prónostico son obtenidos usando el API provisionado por Yahoo Finance. La codificación es realizada usando el lenguaje de programación Python, sin embargo, se usa la aplicación R Markdown para compilar el libro “bookdown”. El modulo para obtener los datos es llamado “yfinance”, más información en https://pypi.org/project/yfinance/. "],["intro.html", "Capitulo 2 Introducción", " Capitulo 2 Introducción La importancia de pronosticar la tasa de cambio del Peso Colombiano (COP) con el Dolar Americano (USD) radica en el impacto significativo en la economía y los negocios de un país. Algunas de las razones por las cuales es importante pronosticar la tasa de cambio de una divisa incluyen: Comercio internacional: Las empresas que realizan negocios internacionales se ven afectadas por las fluctuaciones en las tasas de cambio, ya que estas pueden afectar el costo de los bienes y servicios importados y exportados. Un pronóstico preciso de las tasas de cambio puede ayudar a las empresas a planificar mejor sus estrategias de comercio internacional. Inversión extranjera: Los inversores extranjeros que desean invertir en un país se ven afectados por las tasas de cambio, ya que estas pueden afectar el retorno de su inversión. Un pronóstico preciso de las tasas de cambio puede ayudar a los inversores a tomar decisiones informadas sobre dónde invertir su dinero. Turismo: Las tasas de cambio también pueden tener un impacto en el turismo, ya que pueden afectar el costo de los viajes y los bienes y servicios relacionados con el turismo. Un pronóstico preciso de las tasas de cambio puede ayudar a los turistas a planificar mejor sus viajes y presupuestos. Política monetaria: Los gobiernos y los bancos centrales también pueden utilizar la información sobre las tasas de cambio para formular políticas monetarias. Un pronóstico preciso de las tasas de cambio puede ayudar a los responsables de la formulación de políticas a tomar decisiones informadas sobre las tasas de interés y otros instrumentos de política monetaria. En resumen, el análisis y pronóstico de este par de divisas es importante porque puede afectar la economía y los negocios de un país como Colombiano, así como las decisiones de inversión, turismo y política monetaria. Un pronóstico preciso de las tasas de cambio puede ayudar a las empresas, inversores y responsables de la formulación de políticas a tomar decisiones informadas. "],["get.html", "Capitulo 3 Obtención de datos", " Capitulo 3 Obtención de datos #Install dependencies if not available #py_install(&quot;reticulate&quot;,yfinance&quot;) #install.packages(&quot;reticulate&quot;) library(reticulate) Sys.setenv(RETICULATE_PYTHON=&quot;C:/Users/carlos/anaconda3&quot;) Sys.getenv(&quot;RETICULATE_PYTHON&quot;) ## [1] &quot;C:/Users/carlos/anaconda3&quot; import yfinance as yf data = yf.download(&quot;COP=X&quot;, start=&quot;2017-01-01&quot;, end=&quot;2022-12-31&quot;) ## [*********************100%***********************] 1 of 1 completed data.to_csv(&quot;data.csv&quot;) data.head() ## Open High ... Adj Close Volume ## Date ... ## 2017-01-02 3000.250000 3000.949951 ... 2957.100098 0 ## 2017-01-03 3004.149902 3004.149902 ... 2950.699951 0 ## 2017-01-04 2999.949951 2999.949951 ... 2916.199951 0 ## 2017-01-05 2902.000000 2969.399902 ... 2891.100098 0 ## 2017-01-06 2941.550049 2941.550049 ... 2897.899902 0 ## ## [5 rows x 6 columns] "],["preliminar.html", "Capitulo 4 Analisis Preliminar", " Capitulo 4 Analisis Preliminar import yfinance as yf import pandas as pd import matplotlib.pyplot as plt # Descargar los datos data = yf.download(&quot;COP=X&quot;, start=&quot;2017-01-01&quot;, end=&quot;2022-12-31&quot;) # Obtener el año de cada fecha ## [*********************100%***********************] 1 of 1 completed data[&#39;Year&#39;] = data.index.year # Estadísticas descriptivas por años yearly_stats = data.groupby(&#39;Year&#39;)[&#39;Close&#39;].describe() # Graficar boxplots por año plt.figure(figsize=(10, 6)) data.boxplot(column=&#39;Close&#39;, by=&#39;Year&#39;, vert=False) plt.xlabel(&#39;Precio de cierre&#39;) plt.ylabel(&#39;Año&#39;) plt.title(&#39;Gráfico de caja y bigotes por año - Precio de cierre de COP=X&#39;) plt.grid(True) # Graficar dispersión de precios de cierre por año plt.figure(figsize=(10, 6)) for year, year_data in data.groupby(&#39;Year&#39;): plt.scatter(year_data.index, year_data[&#39;Close&#39;], label=str(year), alpha=0.7) plt.xlabel(&#39;Fecha&#39;) plt.ylabel(&#39;Precio de cierre&#39;) plt.title(&#39;Dispersión de precios de cierre por año - COP=X&#39;) plt.legend(title=&#39;Año&#39;) plt.grid(True) plt.show() Inicialmente, se presenta graficos descriptivos sobre el precio de cierre del precio de peso colombiano (COP) con relación al dolar estado unidense (USD). Se observa, en el diagrama de cajas y bigotes, que el precio tiene fluaciones regulares en los deferentes años, sin valores atipicos destacables, con incrementos con el paso de los años. Es de anotar que la mayor amplitud de los datos de precio, y por tanto una mayor fluctuación de la tasa, se presenta en el reciente año 2022. Para el grafico de dispesión en los años evaluados, se muestra claramente el ascenso de la tasa de cambio COL/USD. Mostrandose con mayor dispersión de los datos en los años 2020 y 2022. "],["desco.html", "Capitulo 5 Descomposición", " Capitulo 5 Descomposición #Manipulation import pandas as pd import numpy as np import datetime from statsmodels.tsa.seasonal import seasonal_decompose #Visualization import matplotlib.pyplot as plt from plotly.subplots import make_subplots import plotly.express as px import plotly.graph_objects as go data = pd.read_csv(&quot;data.csv&quot;) print(data.head(3)) ## Date Open High ... Close Adj Close Volume ## 0 2017-01-02 3000.250000 3000.949951 ... 2957.100098 2957.100098 0 ## 1 2017-01-03 3004.149902 3004.149902 ... 2950.699951 2950.699951 0 ## 2 2017-01-04 2999.949951 2999.949951 ... 2916.199951 2916.199951 0 ## ## [3 rows x 7 columns] Se muestran las seríe de tiempo para los precios de apertura, cierre, máximo y mínimo del 1 de enero de 2017 al 31 de diciembre de 2022, los cuales visualizaremos y compararemos a continuación: serie_graph = make_subplots(rows=2, cols=2,x_title=&quot;Precio(COP)&quot;,y_title=&quot;Fecha&quot;, subplot_titles=(&#39;Apertura&#39;,&quot;Cierre&quot;, &#39;Máximo&#39;, &#39;Mínimo&#39;)) s1 = go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;Open&quot;].values,marker_color=&#39;black&#39;) s2 = go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;High&quot;].values, marker_color=&#39;black&#39;) s3 = go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;Low&quot;].values, marker_color=&#39;black&#39;) s4 = go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;Close&quot;].values, marker_color=&#39;black&#39;) serie_graph.append_trace(s1,1, 1) serie_graph.append_trace(s4, 1, 2) serie_graph.append_trace(s2, 2, 1) serie_graph.append_trace(s3, 2, 2) serie_graph.update_layout( font=dict( family=&quot;Roboto&quot;, size=14, color=&quot;#1A2747&quot; ), showlegend=False) serie_graph.show() Las cuatro series parecen compartarse de una manera muy similar, sin embargo, los precios mínimos parecen tener un comportamiento más estable, aunque, hay unos valores atipicos que hacen que el eje vertical inicie desde el nivel 0. En esas condiciones, a partir de aquí solo tenemos en cuenta precios de cierre que son los que normalmente se desean pronosticar para encontrar comportamientos en la serie. pd.plotting.lag_plot(data[&quot;Close&quot;], lag=12) Con un resago de 12 periodos que en este caso son días, logramos ver la serie autocorrelacionada y muy pocos puntos se evidencias aleatorios, gráficaremos de nuevo con 55 periodos. pd.plotting.lag_plot(data[&quot;Close&quot;], lag=55) Con 55 periodos vemos más puntos alejados del comportamiento que ha venido teniendo la serie en especial para los niveles de 4500 en adelante.Veamos el comportamiento de una media movil simple de 55 periodos para esta serie. import plotly.graph_objects as go sma_graph = go.Figure(go.Scatter(x=data[&quot;Date&quot;], y=data[&quot;Close&quot;].rolling(55).mean(), marker_color=&#39;black&#39;,name=&quot;Tendencia 55 Periodos&quot;)) sma_graph.add_trace(go.Scatter(x=data[&quot;Date&quot;], y=data[&quot;Close&quot;], name=&quot;Precio de cierre&quot;)) sma_graph.show() A partir de abril de 2022 se nota una tendencia no cambiante frente al precio del dolar basada en los 55 ultimos periodos. Finalmente, si vemos esos cambios de precio podemos observar el siguiente gráfico resago55_graph = go.Figure(go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;Close&quot;].diff(periods=55),marker_color=&#39;black&#39;)) resago55_graph.show() Podría parecer que los cambios de precios más fuertes se han dado en el ultimo año, sin embargo, con esta gráfica notamos que fueron en marzo de 2020, el año donde llego la pandemía. Finalmente revisemos la descomposición de esta serie teniendo en cuenta el periodo de 365 días. decomposition = seasonal_decompose(np.log(data[&quot;Close&quot;]), model=&#39;additive&#39;, period=365) data[&quot;dec_trend_365&quot;]=decomposition.trend data[&quot;dec_seasonal_365&quot;]=decomposition.seasonal data[&quot;dec_residuals_365&quot;]=decomposition.resid descomposicion = make_subplots(rows=3, cols=1, x_title=&quot;Variable&quot;, y_title=&quot;&quot;,subplot_titles=(&#39;Trend&#39;, &#39;Seasonal&#39;, &#39;Residuals&#39;)) dc1 = go.Scatter(x=data[&quot;Date&quot;], y=data[&quot;dec_trend_365&quot;].values,marker_color=&#39;black&#39;) dc2 = go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;dec_seasonal_365&quot;].values, marker_color=&#39;black&#39;) dc3 = go.Scatter(x=data[&quot;Date&quot;],y=data[&quot;dec_residuals_365&quot;].values, name= &quot;&quot;, marker_color=&#39;black&#39;) descomposicion.append_trace(dc1,1, 1) descomposicion.append_trace(dc2, 2, 1) descomposicion.append_trace(dc3, 3, 1) descomposicion.update_layout( font=dict( family=&quot;Roboto&quot;, size=14, color=&quot;#1A2747&quot; ), margin=dict(l=0, r=0, b=0, t=80), showlegend=False, height = 700, title_x=0.5, paper_bgcolor=&#39;white&#39;, plot_bgcolor=&#39;white&#39;, hovermode=&#39;closest&#39;,) descomposicion.show() Vemos una tendecia constante al alza, con una estacionalidad que se presenta aproximadamente cada 16 meses, sin embargo, los residuos que estamos obteniendo no parecen ser aleatorios completamiente. Esta frecuencia se podría ser verificada con mayor detalle más adelante. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
